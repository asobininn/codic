use clap::{Arg, SubCommand, AppSettings};

/// codic matches定義をゲットする
pub fn get_matches() -> clap::ArgMatches<'static> {
    clap::App::new("codic")
        .version("1.0")
        .author("asobi <asobininn2000@gmail.com>")
        .about("CodicAPIを用いて日本語を英語に翻訳する")
        .setting(AppSettings::ArgRequiredElseHelp)
        .arg(Arg::with_name("text")
            .help("翻訳したい日本語")
        )
        .arg(Arg::with_name("camel")
            .help("camelCase")
            .short("c")
            .long("aA")
        )
        .arg(Arg::with_name("pascal")
            .help("PascalCase")
            .short("p")
            .long("AA")
        )
        .arg(Arg::with_name("lower underscore")
            .help("lower_case")
            .short("l")
            .long("a_a")
        )
        .arg(Arg::with_name("upper underscore")
            .help("UPPER_CASE")
            .short("u")
            .long("A_A")
        )
        .arg(Arg::with_name("hyphen")
            .help("hyphen-case")
            .short("h")
            .long("a-a")
        )
        // configファイルの設定
        .subcommand(SubCommand::with_name("config")
            .about("configファイルの設定")
            .setting(AppSettings::ArgRequiredElseHelp)
            .arg(Arg::with_name("make")
                .help("デフォルトのコンフィグファイルを作成する")
                .short("m")
                .long("make")
            )
            .arg(Arg::with_name("show")
                .help("コンフィグファイルを表示する")
                .short("s")
                .long("show")
            )
            .subcommand(SubCommand::with_name("edit")
                .about("コンフィグファイルの編集をする")
                .setting(AppSettings::ArgRequiredElseHelp)
                .arg(Arg::with_name("token")
                    .help("APIキーの編集")
                    .short("t")
                    .long("token")
                    .takes_value(true)
                )
                .arg(Arg::with_name("casing")
                    .help("デフォルトcasingの設定
                            camel, pascal, lower underscore,
                            upper underscore, hyphen")
                    .short("c")
                    .long("casing")
                    .takes_value(true)
                )
            )
        )
        .get_matches()
}

